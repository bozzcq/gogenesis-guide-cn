################################################################################    

FAQ    

################################################################################    

简而言之，你如何描述平台？    

  - 区块链平台，旨在以集成应用程序开发环境为基础构建数字生态系统，并通过多级系统管理数据访问权限，界面和智能合约。    

2.平台是否在比特币，以太坊或其他区块链上工作？    

  - 平台建立在原始区块链的基础上。    

3.平台和其他公共区块链平台之间的主要区别在于内置执行智能合约的机制，如以太坊，Qtum以及仍在设计中的那些平台，包括Tezos和EOS？    

  - 平台具有在上述区块链平台中无法找到的独特功能：    

  - 在单一客户端软件中实施的集成应用程序开发环境;    

  - 用于界面设计的专用模板语言，与合同建设语言相一致;    

  - 多层次系统，用于管理对数据，合同和接口的访问权限，在这些权限可以授予个人，成员角色和合同;    

  - 生态系统 - 自主软件环境，用于创建区块链应用程序以及用户与它们的交互;    

  - 法律制度 - 一套法规，编入智能法律（专业智能合约），规定平台用户之间的关系，定义协议参数更改程序，并用于解决问题。    

4.平台是否有自己的加密货币？    

  - 平台使用特殊令牌。生态系统可以发布自己的令牌。    

5.什么是验证节点？    

  - 验证节点是一个有权检查事务并创建块的网络节点。    

6.哪些网络节点有资格成为验证节点？    

  - 不，网络中只能有固定数量的验证节点。    

7.谁可以维护一个验证节点？    

  - 具有足够处理能力和容错能力的任何网络节点都可以成为验证的网络节点。一个节点可以成为基于生态系统投票的有效节点，但只有投资者证明真实运行的生态系统（由平台代币所有者）才能参与此类投票。因此，平台网络实现了新的共识算法 - 生态系统价值授权证明（DPoVE）。通过这种算法，验证节点很可能由主要生态系统运行，因为维护网络运行符合他们的最大利益。    

8.什么是平台生态系统？    

  - 生态系统实际上是自主软件环境，用于创建区块链应用程序和用户操作。    

9.谁可以创建一个生态系统？    

  - 该平台的任何用户都可以创建新的生态系统。    

10.用户如何成为生态系统的成员？    

  - 平台网络中的任何现有生态系统都进行了注册;根据生态系统的政策，会员可以有不同的程序：从在专门目录中发布有关新生态系统的信息到发送公钥。    

11.一个用户可以创建多个生态系统吗？    

  - 是的，每个用户都可以创建任意数量的生态系统，并同时成为任何数量的生态系统的成员。    

12.什么是平台应用程序？    

  - 应用程序是实现功能或服务的完整软件产品。应用程序由数据库表，合约和接口组成。    

13.哪种编程语言用于创建应用程序？    

  - 合同是使用由平台团队开发的Simvolio语言编写的（请参阅合同语言描述）。    

  - 接口是使用Protypo编写的 - 原始界面模板语言（请参阅模板语言描述）。    

14.哪个软件用于创建应用程序和用户与他们的交互？    

  - 应用程序在Molis中编写和执行 - 单个软件客户端;不需要其他软件。    

15.平台合约可以使用第三方API接口访问数据吗？    

  - 不，合同可以直接访问存储在区块链中的数据。专门的神谕用于处理外部数据源。    

16.以后可以编辑保存在区块链中的合同吗？    

o是的，合同是可编辑的。编辑合同的权利由其创建者确定，他们可以拒绝任何更改或授予对特定人员进行合同更改的权利，或者在专业智能法律中配置复杂的条件集。    

  - Molis软件客户端提供对所有合同版本的访问。    

17.什么是聪明的法律？    

  - 聪明的法律是为控制和限制正常合同的运作而创建的合同，也就是生态系统成员的活动。一套商业法则可以被视为一个生态系统的法律制度。    

18.合同可以打电话/执行另一份合同吗？    

  - 是的，合同可以通过直接寻址其他合同并向其提供参数或通过链接（名称）调用合同（参见合同语言描述）来调用其他合同。    

19.申请工作需要主合同吗？    

 -  不，这不对。合同是执行某些功能的自治程序模块。每份合同都配置为接收特定数据，正确检查此数据并执行一些操作，这些操作将作为数据库中的转换记录下来。    

20.应用程序可以本地化为不同的语言吗？    

  - 是的，软件客户端具有用于本地化支持的内置机制，允许创建任何语言的界面。    

21.可以在不使用Protypo模板语言的情况下创建接口？    

  - 是的，platorm API可以用于此目的。    

22.界面页面是否存储在区块链中？    

  - 是的，页面和合同存储在区块链中，以防止伪造。    

23.什么类型的数据库可以用于合同的运作？    

  - Molis软件客户端包含用于创建数据库表的工具（PostgreSQL目前正在使用，但我们稍后可能会更改），而Simvolio合同语言具有读取和写入数据所需的所有功能; Protypo模板语言包括从表中读取数据的函数。    

24.表中数据的访问是如何规定的？    

  - 可以向生态系统成员，角色或特定合同（禁止合同，不是为执行指定操作而创建的合同）提供列，行或编辑数据的权限。    

25.生态系统内的应用程序可以与来自另一个生态系统的应用程序交换数    

  - 是的，数据交换可以通过全球（可用于所有生态系统）表格进行组织。    

26.是否应该从头开始编写新生态系统中的所有应用程序？    

  - 不是，每个新的生态系统都可以作为许多应用程序开箱即用：管理生态系统中成员和角色的机制，配置和发放令牌的应用程序，投票系统，社交新闻系统激励活动，以及生态系统成员的使者。这些应用程序可以进行编辑和配置，以满足任何生态系统的特定要求。    

27.是否有任何运营应用程序的付款？    

  - 是的，验证节点资源的使用应该在平台令牌中支付。    

28.谁负责申请的运作？    

  - 合约创建者在激活时设置一个账户（绑定账户），用于支付资源的代币从中扣除;有一个算法来改变钱包。可以使用生态系统的智能定律来定义它，无论生态系统的成员是否会为应用程序支付工作费用，如果是，将以何种方式支付（捐款或其他方式）。    

29.生态系统中的应用程序如何防止利用其漏洞？    

  - 平台团队了解，无法完全避免应用程序代码中的错误，尤其是考虑到应用程序可以由任何用户编写。这就是为什么我们决定创建一个消除利用漏洞后果的机制。该平台有一套法律制度（一套聪明的法律），允许停止攻击应用程序的运行并进行一些恢复现状的交易。平台法律制度的明智法律规定了执行这些合同和表决程序以授予这些权利的权利。    

30.未来计划在平台上实施哪些新功能？    

  - 可视化界面设计师，    

  - 视觉智能合约设计师，    

  - 支持混合（SQL和NoSQL）数据库，    

  - 来自不同生态系统的交易的并行多线程处理。    

  - 在客户端执行资源密集型计算。    

  - 承载生态系统和计算能力交换。    

  - 只存储服务器上一部分块的部分节点。    

  - 语义参考（本体论），用于统一操作与平台内的数据。    

31.是否有任何平台可操作性的证明？    

  - 在过去的几个月中，在该平台上实施了一系列概念验证项目：投票和投票系统（荷兰），新企业注册（阿联酋），交易金融工具（卢森堡），财产登记印度）和合同管理系统（阿联酋）。    

32.平台是否有明显的缺点？    

  - 与Ethereum相比，平台的最大缺点是平台刚刚处于启动模式。但是这个缺点将随着时间的推移转变成一个很大的优势。    

33.你如何看待阿尔帕的未来？    

  - 平台的设计基于这样一种假设，即只有当所有活动，运营，注册和合同都归于一个区块链时，才能实现区块链技术的全面效应。就像不存在许多共存的互联网一样，最终也不会有很多共存的区块链网络。我们将平台视为一个统一平台，未来将统一世界各国政府的所有运作。    

